version: "3"
services:

  mongo:
    image: mongo:latest
    restart: always
    container_name: mongo
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - /tmp/mongo-db/:/data/db
  
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - ./rabbitmq/:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root

  products:
    build:
      dockerfile: Dockerfile
      context: ./products
    container_name: products
    ports:
      - "8002:8002"
    restart: always
    depends_on:
      - "mongo"
      - "rabbitmq"
    volumes:
      - .:/app
      - /app/products/node_modules
    env_file:
      - ./products/.env.dev
      
  # shopping:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./shopping
  #   container_name: shopping
  #   ports:
  #     - "8003:8003"
  #   restart: always
  #   depends_on:
  #     - "mongo"
  #     - "rabbitmq"
  #   volumes:
  #     - .:/app
  #     - /app/shopping/node_modules
  #   env_file:
  #     - ./shopping/.env.dev

  # customer:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./customer
  #   container_name: customer
  #   ports:
  #     - "8001:8001"
  #   restart: always
  #   depends_on:
  #     - "mongo"
  #     - "rabbitmq"
  #   volumes:
  #     - .:/app/
  #     - /app/customer/node_modules
  #     - /app/frontend/node_modules
  #   env_file:
  #     - ./customer/.env.dev

  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./proxy
    depends_on:
      - products
      # - shopping
      # - customer
    ports:
      - 80:80
    container_name: nginx-proxy